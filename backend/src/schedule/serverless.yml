service:
  name: lq-s3-schedule${self:custom.${self:provider.stage}.branch}

frameworkVersion: ">=1.0.0 <2.0.0"

custom: ${file(../../../serverless-custom.yml)}

package:
  individually: true
  exclude:
    - tests/**
    - node_modules/**

provider:
  name: aws
  runtime: python3.8
  memorySize: 128
  timeout: 10
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  apiGateway:
    restApiId:
      "Fn::ImportValue": ${self:custom.${self:provider.stage}.Stack}-restApiId-${self:provider.stage}${self:custom.${self:provider.stage}.branch}
    restApiRootResourceId:
      "Fn::ImportValue": ${self:custom.${self:provider.stage}.Stack}-rootResourceId-${self:provider.stage}${self:custom.${self:provider.stage}.branch}
  CogUserPool:
    "Fn::ImportValue": ${self:custom.${self:provider.stage}.Stack}-userpool-${self:provider.stage}${self:custom.${self:provider.stage}.branch}
  CogUserPoolArn:
    "Fn::ImportValue": ${self:custom.${self:provider.stage}.Stack}-userpoolarn-${self:provider.stage}${self:custom.${self:provider.stage}.branch}
  environment:
    REGION: ${self:provider.region}
    LOG_LEVEL: ${self:custom.${self:provider.stage}.LogLevel}

functions:
  schedule:
    handler: scheduler.handler
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:Query
        Resource:
          - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.appointmentTableName}
          - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.appointmentTableName}/index/*
    environment:
      APPOINTMENTS_TABLE: ${self:custom.appointmentTableName}
    events:
      - schedule: cron(59 23 * * ? *)
    layers:
      - ${cf:python-utils-${self:provider.stage}.PythonUtilsLambdaLayerQualifiedArn}

plugins:
  - serverless-python-requirements
  - serverless-wsgi
